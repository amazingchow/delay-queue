// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: github.com/amazingchow/photon-dance-delay-queue/pb/task-delay-queue-service.proto

package api

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AttachedTopic string `protobuf:"bytes,2,opt,name=attached_topic,json=attachedTopic,proto3" json:"attached_topic,omitempty"`
	Delay         int32  `protobuf:"varint,3,opt,name=delay,proto3" json:"delay,omitempty"`
	Ttl           int32  `protobuf:"varint,4,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Payload       string `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_rawDescGZIP(), []int{0}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetAttachedTopic() string {
	if x != nil {
		return x.AttachedTopic
	}
	return ""
}

func (x *Task) GetDelay() int32 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *Task) GetTtl() int32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *Task) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

type PushTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task *Task `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *PushTaskRequest) Reset() {
	*x = PushTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushTaskRequest) ProtoMessage() {}

func (x *PushTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushTaskRequest.ProtoReflect.Descriptor instead.
func (*PushTaskRequest) Descriptor() ([]byte, []int) {
	return file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_rawDescGZIP(), []int{1}
}

func (x *PushTaskRequest) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type PushTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushTaskResponse) Reset() {
	*x = PushTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushTaskResponse) ProtoMessage() {}

func (x *PushTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushTaskResponse.ProtoReflect.Descriptor instead.
func (*PushTaskResponse) Descriptor() ([]byte, []int) {
	return file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_rawDescGZIP(), []int{2}
}

type FinishTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *FinishTaskRequest) Reset() {
	*x = FinishTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishTaskRequest) ProtoMessage() {}

func (x *FinishTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishTaskRequest.ProtoReflect.Descriptor instead.
func (*FinishTaskRequest) Descriptor() ([]byte, []int) {
	return file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_rawDescGZIP(), []int{3}
}

func (x *FinishTaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type FinishTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FinishTaskResponse) Reset() {
	*x = FinishTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishTaskResponse) ProtoMessage() {}

func (x *FinishTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishTaskResponse.ProtoReflect.Descriptor instead.
func (*FinishTaskResponse) Descriptor() ([]byte, []int) {
	return file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_rawDescGZIP(), []int{4}
}

type CheckTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *CheckTaskRequest) Reset() {
	*x = CheckTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTaskRequest) ProtoMessage() {}

func (x *CheckTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTaskRequest.ProtoReflect.Descriptor instead.
func (*CheckTaskRequest) Descriptor() ([]byte, []int) {
	return file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_rawDescGZIP(), []int{5}
}

func (x *CheckTaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type CheckTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task *Task `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *CheckTaskResponse) Reset() {
	*x = CheckTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTaskResponse) ProtoMessage() {}

func (x *CheckTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTaskResponse.ProtoReflect.Descriptor instead.
func (*CheckTaskResponse) Descriptor() ([]byte, []int) {
	return file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_rawDescGZIP(), []int{6}
}

func (x *CheckTaskResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

var File_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto protoreflect.FileDescriptor

var file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_rawDesc = []byte{
	0x0a, 0x51, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6d, 0x61,
	0x7a, 0x69, 0x6e, 0x67, 0x63, 0x68, 0x6f, 0x77, 0x2f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x6e, 0x2d,
	0x64, 0x61, 0x6e, 0x63, 0x65, 0x2d, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x2d, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x2f, 0x70, 0x62, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2d, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x2d,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x24, 0x61, 0x6d, 0x61, 0x7a, 0x69, 0x6e, 0x67, 0x63, 0x68, 0x6f, 0x77,
	0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x64, 0x65,
	0x6c, 0x61, 0x79, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x22, 0x7f, 0x0a, 0x04, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x74, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x51, 0x0a, 0x0f, 0x50, 0x75,
	0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a,
	0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6d,
	0x61, 0x7a, 0x69, 0x6e, 0x67, 0x63, 0x68, 0x6f, 0x77, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x6e,
	0x5f, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x12, 0x0a,
	0x10, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2c, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22,
	0x14, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x22, 0x53, 0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x69, 0x6e, 0x67, 0x63,
	0x68, 0x6f, 0x77, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x32, 0x85, 0x03, 0x0a, 0x15, 0x54, 0x61, 0x73, 0x6b,
	0x44, 0x65, 0x6c, 0x61, 0x79, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x75, 0x0a, 0x04, 0x50, 0x75, 0x73, 0x68, 0x12, 0x35, 0x2e, 0x61, 0x6d, 0x61, 0x7a,
	0x69, 0x6e, 0x67, 0x63, 0x68, 0x6f, 0x77, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x6e, 0x5f, 0x64,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x36, 0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x69, 0x6e, 0x67, 0x63, 0x68, 0x6f, 0x77, 0x2e, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x61,
	0x79, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x06, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x12, 0x37, 0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x69, 0x6e, 0x67, 0x63, 0x68, 0x6f, 0x77,
	0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x64, 0x65,
	0x6c, 0x61, 0x79, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x61, 0x6d,
	0x61, 0x7a, 0x69, 0x6e, 0x67, 0x63, 0x68, 0x6f, 0x77, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x6e,
	0x5f, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x05, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x36,
	0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x69, 0x6e, 0x67, 0x63, 0x68, 0x6f, 0x77, 0x2e, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x61, 0x6d, 0x61, 0x7a, 0x69, 0x6e, 0x67,
	0x63, 0x68, 0x6f, 0x77, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6d,
	0x61, 0x7a, 0x69, 0x6e, 0x67, 0x63, 0x68, 0x6f, 0x77, 0x2f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x6e,
	0x2d, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x2d, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x2d, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_rawDescOnce sync.Once
	file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_rawDescData = file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_rawDesc
)

func file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_rawDescGZIP() []byte {
	file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_rawDescOnce.Do(func() {
		file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_rawDescData)
	})
	return file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_rawDescData
}

var file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_goTypes = []interface{}{
	(*Task)(nil),               // 0: amazingchow.photon_dance_delay_queue.Task
	(*PushTaskRequest)(nil),    // 1: amazingchow.photon_dance_delay_queue.PushTaskRequest
	(*PushTaskResponse)(nil),   // 2: amazingchow.photon_dance_delay_queue.PushTaskResponse
	(*FinishTaskRequest)(nil),  // 3: amazingchow.photon_dance_delay_queue.FinishTaskRequest
	(*FinishTaskResponse)(nil), // 4: amazingchow.photon_dance_delay_queue.FinishTaskResponse
	(*CheckTaskRequest)(nil),   // 5: amazingchow.photon_dance_delay_queue.CheckTaskRequest
	(*CheckTaskResponse)(nil),  // 6: amazingchow.photon_dance_delay_queue.CheckTaskResponse
}
var file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_depIdxs = []int32{
	0, // 0: amazingchow.photon_dance_delay_queue.PushTaskRequest.task:type_name -> amazingchow.photon_dance_delay_queue.Task
	0, // 1: amazingchow.photon_dance_delay_queue.CheckTaskResponse.task:type_name -> amazingchow.photon_dance_delay_queue.Task
	1, // 2: amazingchow.photon_dance_delay_queue.TaskDelayQueueService.Push:input_type -> amazingchow.photon_dance_delay_queue.PushTaskRequest
	3, // 3: amazingchow.photon_dance_delay_queue.TaskDelayQueueService.Finish:input_type -> amazingchow.photon_dance_delay_queue.FinishTaskRequest
	5, // 4: amazingchow.photon_dance_delay_queue.TaskDelayQueueService.Exist:input_type -> amazingchow.photon_dance_delay_queue.CheckTaskRequest
	2, // 5: amazingchow.photon_dance_delay_queue.TaskDelayQueueService.Push:output_type -> amazingchow.photon_dance_delay_queue.PushTaskResponse
	4, // 6: amazingchow.photon_dance_delay_queue.TaskDelayQueueService.Finish:output_type -> amazingchow.photon_dance_delay_queue.FinishTaskResponse
	6, // 7: amazingchow.photon_dance_delay_queue.TaskDelayQueueService.Exist:output_type -> amazingchow.photon_dance_delay_queue.CheckTaskResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() {
	file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_init()
}
func file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_init() {
	if File_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_goTypes,
		DependencyIndexes: file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_depIdxs,
		MessageInfos:      file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_msgTypes,
	}.Build()
	File_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto = out.File
	file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_rawDesc = nil
	file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_goTypes = nil
	file_github_com_amazingchow_photon_dance_delay_queue_pb_task_delay_queue_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TaskDelayQueueServiceClient is the client API for TaskDelayQueueService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskDelayQueueServiceClient interface {
	Push(ctx context.Context, in *PushTaskRequest, opts ...grpc.CallOption) (*PushTaskResponse, error)
	Finish(ctx context.Context, in *FinishTaskRequest, opts ...grpc.CallOption) (*FinishTaskResponse, error)
	Exist(ctx context.Context, in *CheckTaskRequest, opts ...grpc.CallOption) (*CheckTaskResponse, error)
}

type taskDelayQueueServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTaskDelayQueueServiceClient(cc grpc.ClientConnInterface) TaskDelayQueueServiceClient {
	return &taskDelayQueueServiceClient{cc}
}

func (c *taskDelayQueueServiceClient) Push(ctx context.Context, in *PushTaskRequest, opts ...grpc.CallOption) (*PushTaskResponse, error) {
	out := new(PushTaskResponse)
	err := c.cc.Invoke(ctx, "/amazingchow.photon_dance_delay_queue.TaskDelayQueueService/Push", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskDelayQueueServiceClient) Finish(ctx context.Context, in *FinishTaskRequest, opts ...grpc.CallOption) (*FinishTaskResponse, error) {
	out := new(FinishTaskResponse)
	err := c.cc.Invoke(ctx, "/amazingchow.photon_dance_delay_queue.TaskDelayQueueService/Finish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskDelayQueueServiceClient) Exist(ctx context.Context, in *CheckTaskRequest, opts ...grpc.CallOption) (*CheckTaskResponse, error) {
	out := new(CheckTaskResponse)
	err := c.cc.Invoke(ctx, "/amazingchow.photon_dance_delay_queue.TaskDelayQueueService/Exist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskDelayQueueServiceServer is the server API for TaskDelayQueueService service.
type TaskDelayQueueServiceServer interface {
	Push(context.Context, *PushTaskRequest) (*PushTaskResponse, error)
	Finish(context.Context, *FinishTaskRequest) (*FinishTaskResponse, error)
	Exist(context.Context, *CheckTaskRequest) (*CheckTaskResponse, error)
}

// UnimplementedTaskDelayQueueServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTaskDelayQueueServiceServer struct {
}

func (*UnimplementedTaskDelayQueueServiceServer) Push(context.Context, *PushTaskRequest) (*PushTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Push not implemented")
}
func (*UnimplementedTaskDelayQueueServiceServer) Finish(context.Context, *FinishTaskRequest) (*FinishTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Finish not implemented")
}
func (*UnimplementedTaskDelayQueueServiceServer) Exist(context.Context, *CheckTaskRequest) (*CheckTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Exist not implemented")
}

func RegisterTaskDelayQueueServiceServer(s *grpc.Server, srv TaskDelayQueueServiceServer) {
	s.RegisterService(&_TaskDelayQueueService_serviceDesc, srv)
}

func _TaskDelayQueueService_Push_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskDelayQueueServiceServer).Push(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/amazingchow.photon_dance_delay_queue.TaskDelayQueueService/Push",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskDelayQueueServiceServer).Push(ctx, req.(*PushTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskDelayQueueService_Finish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FinishTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskDelayQueueServiceServer).Finish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/amazingchow.photon_dance_delay_queue.TaskDelayQueueService/Finish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskDelayQueueServiceServer).Finish(ctx, req.(*FinishTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskDelayQueueService_Exist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskDelayQueueServiceServer).Exist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/amazingchow.photon_dance_delay_queue.TaskDelayQueueService/Exist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskDelayQueueServiceServer).Exist(ctx, req.(*CheckTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaskDelayQueueService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "amazingchow.photon_dance_delay_queue.TaskDelayQueueService",
	HandlerType: (*TaskDelayQueueServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Push",
			Handler:    _TaskDelayQueueService_Push_Handler,
		},
		{
			MethodName: "Finish",
			Handler:    _TaskDelayQueueService_Finish_Handler,
		},
		{
			MethodName: "Exist",
			Handler:    _TaskDelayQueueService_Exist_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/amazingchow/photon-dance-delay-queue/pb/task-delay-queue-service.proto",
}
